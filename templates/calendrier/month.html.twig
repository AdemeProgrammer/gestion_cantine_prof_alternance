{% extends 'base.html.twig' %}
{% import "_macros/breadcumb.html.twig" as _breadcumb %}

{% block title %}Mois — {{ firstOfMonth|date('F Y', 'Europe/Paris')|capitalize }}{% endblock %}
{% block titre_page %}{{ firstOfMonth|date('F Y', 'Europe/Paris')|capitalize }}{% endblock %}
{% block action_page %}
    
{% endblock %}
{% block Breadcrumb %}
    {{ _breadcumb.etape("Promotion") }}
    {{ _breadcumb.etape("Année") }}
    {{ _breadcumb.etape("Mois") }}
{% endblock %}
{% block body %}
    <div class="container py-4">

        <div class="d-flex align-items-center justify-content-between mb-3">
            <div><a class="btn btn-outline-secondary btn-sm" href="{{ path('cal_month', { id: promo.id, y: prev.y, m: prev.m }) }}">&laquo; Mois précédent</a></div>
            <div class="text-center">
                <div class="h5 m-0">Promo {{ promo.anneeDebut }} - {{ promo.anneeFin }}</div>
                <div class="text-muted">{{ firstOfMonth|date('F Y', 'Europe/Paris')|capitalize }}</div>
            </div>
            <div><a class="btn btn-outline-secondary btn-sm" href="{{ path('cal_month', { id: promo.id, y: next.y, m: next.m }) }}">Mois suivant &raquo;</a></div>
        </div>

        <div class="table-responsive">
            <table class="table table-sm align-middle">
                <thead class="table-light">
                <tr>
                    <th class="text-nowrap">Professeur</th>
                    {# En-tête basé UNIQUEMENT sur la BDD calendrier #}
                    {% for col in columns %}
                        {# col.dowLabel ex: "jeu." -> on prend 2 lettres #}
                        {% set dlabel = col.dowLabel|replace({'.':''})|slice(0,2)|capitalize %}
                        <th class="text-center text-nowrap">
                            {{ dlabel }}<br>{{ col.date|date('d/m', 'Europe/Paris') }}
                        </th>
                    {% endfor %}
                </tr>
                </thead>
                <tbody>

                {# Bandeau : type de jour depuis la BDD 'calendrier' #}
                <tr>
                    <td class="fw-normal text-muted text-center">Type de Jour</td>
                    {% for col in columns %}
                        {% set t = (typesMap[col.ymd] ?? '')|lower|trim %}
                        {% set cls =
                            t in ['ferie','férié','ferié','ferme','fermé'] ? 'bg-danger' :
                            (t in ['vacances'] ? 'bg-warning text-dark' :
                            (t in ['semaine','cours'] ? 'bg-secondary' : 'bg-light text-muted'))
                        %}
                        <td class="text-center">
                            {% if t %}
                                <span class="badge {{ cls }}">{{ t }}</span>
                            {% else %}
                                <span class="text-muted">–</span>
                            {% endif %}
                        </td>
                    {% endfor %}
                </tr>

                {# Matrice : checked <=> une ligne `repas` existe (final == 1) #}
                {% for row in rows %}
                    <tr>
                        <td class="text-nowrap text-center">{{ row.prof.prenom }} {{ row.prof.nom }}</td>

                        {% for j, cell in row.cells %}
                            {% set col = columns[j] %}
                            {% set checked = (cell.final == 1) %}
                            <td class="text-center">
                                <input type="checkbox"
                                       class="form-check-input meal-toggle"
                                       data-cal-id="{{ col.calId }}"
                                       data-prof-id="{{ row.profId }}"
                                       {% if checked %}checked{% endif %} />
                            </td>
                        {% endfor %}
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="{{ columns|length + 1 }}" class="text-center text-muted py-4">
                            Aucun professeur actif lié à cette promo.
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>


        <div class="mt-3 d-flex gap-3">
            <a href="{{ path('cal_summary', { id: promo.id }) }}" class="btn btn-light">← Retour aux mois</a>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const url = "{{ path('cal_save') }}";
            const token = "{{ csrf }}";

            document.querySelectorAll('.meal-toggle').forEach(cb => {
                cb.addEventListener('change', async (e) => {
                    const box = e.currentTarget;

                    const payload = {
                        calId: parseInt(box.dataset.calId, 10),
                        profId: parseInt(box.dataset.profId, 10),
                        value: !!box.checked,
                        _token: token
                    };

                    try {
                        const res = await fetch(url, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json', 'X-Requested-With': 'XMLHttpRequest' },
                            body: JSON.stringify(payload)
                        });
                        const data = await res.json();
                        if (!res.ok || !data.ok) {
                            box.checked = !box.checked; // rollback
                            alert('Enregistrement impossible' + (data.error ? ' (' + data.error + ')' : ''));
                        }
                    } catch (err) {
                        box.checked = !box.checked; // rollback
                        alert('Erreur réseau, réessaie.');
                    }
                });
            });
        });
    </script>
{% endblock %}
